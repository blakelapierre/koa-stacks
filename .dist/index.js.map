{"version":3,"sources":["index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import * as koa from 'koa';\nimport * as auth from 'koa-basic-auth';\nimport * as mount from 'koa-mount';\nimport * as route from 'koa-route';\nimport * as _ from 'lodash';\n\nimport authorizationRedirect from './authorizationRedirect';\n\n// const authorizationRedirect = require('./authorizationRedirect');\n\nexport default (stacks, log) => {\n  log = log || (() => {});\n\n  return _.mapValues(stacks, (stack, stackName) => {\n    log(`Constructing '${stackName}' stack`);\n\n    const {\n      authorization,\n      middleware,\n      routes\n    } = stack;\n\n    const server = new koa(),\n          {use} = server;\n\n    if (authorization) {\n      const {type} = authorization;\n\n      if (type === 'basic') {\n        const {name, pass} = authorization;\n\n        use.call(server, authorizationRedirect);\n        use.call(server, auth({name, pass}));\n      }\n    }\n\n    const routeAuthorizations = getRouteAuthorizations(routes);\n\n    if (routeAuthorizations.length > 0) {\n      if (!authorization) use.call(server, authorizationRedirect);\n\n      _.each(routeAuthorizations, routeAuthorization => {\n        const {path, authorization} = routeAuthorization,\n              {type} = authorization;\n\n        if (type === 'basic') {\n          const {name, pass} = authorization;\n\n          use.call(server, mount(path, auth({name, pass})));\n        }\n      });\n    }\n\n    _.each(middleware || [], use.bind(server));\n\n    _.each(routes, addRoute);\n\n    return server;\n\n    function getRouteAuthorizations(routes = {}, parentPath = '') {\n      return _.filter(_.flatten(_.map(routes, (definition, path) => {\n        const {authorization, routes} = definition;\n\n        path = parentPath + path;\n\n        return (authorization ? [{path, authorization}] : []).concat(getRouteAuthorizations(routes, path));\n      })), value => value !== undefined);\n    }\n\n    function addRoute(definition, path) {\n      const {methods, routes, authorization} = definition;\n\n      _.each(methods, (handler, method) => {\n        log(`Adding ${authorization ? 'protected ' : ''}'${method}' route at '${path}'`);\n        use.call(server, route[method](path, handler));\n      });\n\n      _.each(routes, addSubRoute);\n\n      function addSubRoute(subDefinition, subPath) {\n        addRoute(subDefinition, path + subPath);\n      }\n    }\n  });\n};"]}