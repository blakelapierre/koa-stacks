{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["require('babel/polyfill');\n\nimport koa from 'koa';\nimport auth from 'koa-basic-auth';\nimport mount from 'koa-mount';\nimport route from 'koa-route';\nimport _ from 'lodash';\n\nconst authorizationRedirect = require('./authorizationRedirect');\n\nmodule.exports = (stacks, log) => {\n  log = log || (() => {});\n\n  return _.mapValues(stacks, (stack, stackName) => {\n    log(`Constructing '${stackName}' stack`);\n\n    const {\n      authorization,\n      middleware,\n      routes\n    } = stack;\n\n    const server = koa(),\n          {use} = server;\n\n    if (authorization) {\n      const {type} = authorization;\n\n      if (type === 'basic') {\n        const {name, pass} = authorization;\n\n        use.call(server, authorizationRedirect);\n        use.call(server, auth({name, pass}));\n      }\n    }\n\n    const routeAuthorizations = getRouteAuthorizations(routes);\n\n    if (routeAuthorizations.length > 0) {\n      if (!authorization) use.call(server, authorizationRedirect);\n\n      _.each(routeAuthorizations, routeAuthorization => {\n        const {path, authorization} = routeAuthorization,\n              {type} = authorization;\n\n        if (type === 'basic') {\n          const {name, pass} = authorization;\n\n          use.call(server, mount(path, auth({name, pass})));\n        }\n      });\n    }\n\n    _.each(middleware || [], use.bind(server));\n\n    _.each(routes, addRoute);\n\n    return server;\n\n    function getRouteAuthorizations(routes = {}, parentPath = '') {\n      return _.filter(_.flatten(_.map(routes, (definition, path) => {\n        const {authorization, routes} = definition;\n\n        path = parentPath + path;\n\n        if (authorization) {\n          return [{\n            path,\n            authorization,\n          }].concat(getRouteAuthorizations(routes, path));\n        }\n        else return getRouteAuthorizations(routes, path);\n\n\n      })), value => value !== undefined);\n    }\n\n    function addRoute(definition, path) {\n      const {methods, routes, authorization} = definition;\n\n      _.each(methods, (handler, method) => {\n        log(`Adding ${authorization ? 'protected ' : ''}'${method}' route at '${path}'`);\n        use.call(server, route[method](path, handler));\n      });\n\n      _.each(routes, addSubRoute);\n\n      function addSubRoute(subDefinition, subPath) {\n        addRoute(subDefinition, path + subPath);\n      }\n    }\n  });\n};"],"sourceRoot":"/source/"}